library(latex2exp)

source("./05_Scheme5_Main.R")

simu.n <- 50
pvalue_output <- numeric(simu.n)
i <- 1 
j <- 1
model_output <- vector(mode = "list", simu.n)

while (i <= simu.n) {
    print(paste0("number of success: ", i))
    
    # Use tryCatch to handle potential errors in simu1
    result <- tryCatch({
        simu1(seed = j)  # Use a unique seed for each successful run
    }, error = function(e) {
        message("Error in simulation ", j, ": ", e$message)
        return(NULL)  # Return NULL if simu1 fails
    })
    
    # If simu1 runs successfully, store the result and increment counters
    if (!is.null(result)) {
        pvalue_output[i] <- result$pvalue
        model_output[[i]] <- result$ST_GX_D_output
        i <- i + 1
    }
    # update seed no matter success or not
    j <- j + 1
}

saveRDS(pvalue_output,"./05_Scheme5/pvalue_output_partI.RDS")
saveRDS(model_output,"./05_Scheme5/model_output_partI.RDS")

pvalue_output_ecdf <- ecdf(pvalue_output)
xaxis <- seq(0,1,length.out = 1000)
yaxis <- pvalue_output_ecdf(xaxis)

pdf("./05_Scheme5/05_Scheme5_PartI.pdf", width = 5, height = 5)
p1 <- xyplot(yaxis ~ xaxis,
             type = "l",
             aspect = 1,
             lwd = 2,
             xlab = TeX("$p$-value"),
             ylab = "Probability",
             main = TeX("Empirical Cumulative Distribution of $p$-value")) +
    latticeExtra::layer(panel.lines(x = xaxis, y = xaxis, 
                                    col = "red", lwd = 2, lty = 2))
plot(p1)
dev.off()
